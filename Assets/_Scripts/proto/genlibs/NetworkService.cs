// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Assets/_Scripts/proto/NetworkService.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NetworkService {

  /// <summary>Holder for reflection information generated from Assets/_Scripts/proto/NetworkService.proto</summary>
  public static partial class NetworkServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for Assets/_Scripts/proto/NetworkService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetworkServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CipBc3NldHMvX1NjcmlwdHMvcHJvdG8vTmV0d29ya1NlcnZpY2UucHJvdG8S",
            "Dk5ldHdvcmtTZXJ2aWNlIhsKC1BpbmdSZXF1ZXN0EgwKBG5hbWUYASABKAki",
            "PQoJUGluZ1JlcGx5EjAKB3Jlc0NvZGUYASABKA4yHy5OZXR3b3JrU2Vydmlj",
            "ZS5QaW5nUmVwbHlTdGF0dXMiJQoPSm9pbkdhbWVSZXF1ZXN0EhIKCnBsYXll",
            "ck5hbWUYASABKAkiRQoNSm9pbkdhbWVSZXBseRI0CgdyZXNDb2RlGAEgASgO",
            "MiMuTmV0d29ya1NlcnZpY2UuSm9pbkdhbWVSZXBseVN0YXR1cypLCg9QaW5n",
            "UmVwbHlTdGF0dXMSGwoXUElOR1JFUExZU1RBVFVTX1NVQ0NFU1MQABIbChdQ",
            "SU5HUkVQTFlTVEFUVVNfRkFJTFVSRRBjKlcKE0pvaW5HYW1lUmVwbHlTdGF0",
            "dXMSHwobSk9JTkdBTUVSRVBMWVNUQVRVU19TVUNDRVNTEAASHwobSk9JTkdB",
            "TUVSRVBMWVNUQVRVU19GQUlMVVJFEGMypwEKDk5ldHdvcmtTZXJ2aWNlEkcK",
            "C1BpbmdTZXJ2aWNlEhsuTmV0d29ya1NlcnZpY2UuUGluZ1JlcXVlc3QaGS5O",
            "ZXR3b3JrU2VydmljZS5QaW5nUmVwbHkiABJMCghKb2luR2FtZRIfLk5ldHdv",
            "cmtTZXJ2aWNlLkpvaW5HYW1lUmVxdWVzdBodLk5ldHdvcmtTZXJ2aWNlLkpv",
            "aW5HYW1lUmVwbHkiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::NetworkService.PingReplyStatus), typeof(global::NetworkService.JoinGameReplyStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkService.PingRequest), global::NetworkService.PingRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkService.PingReply), global::NetworkService.PingReply.Parser, new[]{ "ResCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkService.JoinGameRequest), global::NetworkService.JoinGameRequest.Parser, new[]{ "PlayerName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkService.JoinGameReply), global::NetworkService.JoinGameReply.Parser, new[]{ "ResCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PingReplyStatus {
    [pbr::OriginalName("PINGREPLYSTATUS_SUCCESS")] Success = 0,
    [pbr::OriginalName("PINGREPLYSTATUS_FAILURE")] Failure = 99,
  }

  public enum JoinGameReplyStatus {
    [pbr::OriginalName("JOINGAMEREPLYSTATUS_SUCCESS")] Success = 0,
    [pbr::OriginalName("JOINGAMEREPLYSTATUS_FAILURE")] Failure = 99,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The request message containing the user's name.
  /// </summary>
  public sealed partial class PingRequest : pb::IMessage<PingRequest> {
    private static readonly pb::MessageParser<PingRequest> _parser = new pb::MessageParser<PingRequest>(() => new PingRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkService.NetworkServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingRequest(PingRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingRequest Clone() {
      return new PingRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the greetings
  /// </summary>
  public sealed partial class PingReply : pb::IMessage<PingReply> {
    private static readonly pb::MessageParser<PingReply> _parser = new pb::MessageParser<PingReply>(() => new PingReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkService.NetworkServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingReply(PingReply other) : this() {
      resCode_ = other.resCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingReply Clone() {
      return new PingReply(this);
    }

    /// <summary>Field number for the "resCode" field.</summary>
    public const int ResCodeFieldNumber = 1;
    private global::NetworkService.PingReplyStatus resCode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetworkService.PingReplyStatus ResCode {
      get { return resCode_; }
      set {
        resCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResCode != other.ResCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResCode != 0) hash ^= ResCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResCode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ResCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingReply other) {
      if (other == null) {
        return;
      }
      if (other.ResCode != 0) {
        ResCode = other.ResCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            resCode_ = (global::NetworkService.PingReplyStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinGameRequest : pb::IMessage<JoinGameRequest> {
    private static readonly pb::MessageParser<JoinGameRequest> _parser = new pb::MessageParser<JoinGameRequest>(() => new JoinGameRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinGameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkService.NetworkServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGameRequest(JoinGameRequest other) : this() {
      playerName_ = other.playerName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGameRequest Clone() {
      return new JoinGameRequest(this);
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 1;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinGameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinGameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerName != other.PlayerName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinGameRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PlayerName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinGameReply : pb::IMessage<JoinGameReply> {
    private static readonly pb::MessageParser<JoinGameReply> _parser = new pb::MessageParser<JoinGameReply>(() => new JoinGameReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinGameReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkService.NetworkServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGameReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGameReply(JoinGameReply other) : this() {
      resCode_ = other.resCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGameReply Clone() {
      return new JoinGameReply(this);
    }

    /// <summary>Field number for the "resCode" field.</summary>
    public const int ResCodeFieldNumber = 1;
    private global::NetworkService.JoinGameReplyStatus resCode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetworkService.JoinGameReplyStatus ResCode {
      get { return resCode_; }
      set {
        resCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinGameReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinGameReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResCode != other.ResCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResCode != 0) hash ^= ResCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResCode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ResCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinGameReply other) {
      if (other == null) {
        return;
      }
      if (other.ResCode != 0) {
        ResCode = other.ResCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            resCode_ = (global::NetworkService.JoinGameReplyStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
